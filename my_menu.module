<?php
/**
 * @file
 * My own menu on toolbar.
 */

/**
 * Implements hook_help().
 *
 * Displays help and module information.
 *
 * @param path
 *   Which path of the site we're using to display help
 *
 * @param arg
 *   Array that holds the current path as returned from arg() function
 *
 * @return string
 *   String
 */
function my_menu_help($path, $arg) {
  switch ($path) {
    case "admin/help#my_menu":
      return '' . t("This is my menu.") . '';
      break;

  }
}

/**
 * Implements hook_block_info().
 *
 * @return
 *  name and settings of the block
 */
function my_menu_block_info() {
  $blocks['my_menu'] = [
    // The name that will appear in the block list.
    'info' => t('My menu'),
    // Default setting.
    'cache' => DRUPAL_CACHE_PER_ROLE,
  ];
  return $blocks;
}

/**
 * Implements hook_menu().
 *
 * A simple example which defines a page callback and a menu entry.
 *
 * @return
 *    items
 */

function my_menu_menu() {
  $items['ads'] = [
    'title' => 'Объявления',
    'description' => 'Страница с объявлениями',
    'page callback' => 'my_menu_ads_page',
    'file' => 'my_menu.pages.inc',
    'menu_name' => 'menu-test',
    'expanded' => TRUE,
    'access callback' => TRUE,
  ];
  $items['ads/buy'] = [
    'title' => 'Куплю',
    'description' => 'Страница с объявлениями о покупке',
    'page callback' => 'my_menu_buy_ads_page',
    'access callback' => TRUE,
    'file' => 'my_menu.pages.inc',
    'menu_name' => 'menu-test',
    'expanded' => TRUE,
  ];
  $items['ads/sell'] = [
    'title' => 'Продам',
    'description' => 'Страница с объявлениями о продаже',
    'page callback' => 'my_menu_sell_ads_page',
    'access callback' => TRUE,
    'file' => 'my_menu.pages.inc',
    'menu_name' => 'menu-test',
    'expanded' => TRUE,
  ];
  $items['ads/add'] = [
    'title' => 'Добавить объявление',
    'description' => 'Добавление объявления',
    'page callback' => 'my_menu_add_ads_page',
    'file' => 'my_menu.pages.inc',
    'menu_name' => 'menu-test',
    'access arguments' => array('access to ads'),
    'expanded' => TRUE,
  ];
  $items['catalogue'] = [
    'title' => 'Каталог',
    'description' => 'Каталог услуг',
    'page callback' => 'my_menu_catalogue_page',
    'access callback' => TRUE,
    'file' => 'my_menu.pages.inc',
    'menu_name' => 'menu-test',
    'expanded' => TRUE,
  ];
  $items['catalogue/dealership'] = [
    'title' => 'Автосалоны',
    'description' => 'Каталог автосалонов',
    'page callback' => 'my_menu_catalogue_dealership_page',
    'access callback' => TRUE,
    'file' => 'my_menu.pages.inc',
    'menu_name' => 'menu-test',
    'expanded' => TRUE,
  ];
  $items['catalogue/shop'] = [
    'title' => 'Магазины',
    'description' => 'Каталог магазинов',
    'page callback' => 'my_menu_catalogue_shop_page',
    'access callback' => TRUE,
    'file' => 'my_menu.pages.inc',
    'menu_name' => 'menu-test',
    'expanded' => TRUE,
  ];
  $items['review'] = [
    'title' => 'Добавить отзыв',
    'description' => 'Добавить отзыв о сервисе',
    'page callback' => 'my_menu_review_page',
    'file' => 'my_menu.pages.inc',
    'menu_name' => 'menu-test',
    'access arguments' => array('access to reviews'),
    'expanded' => TRUE,
  ];
  $items['test_item'] = [
    'title' => 'Test Item',
    'description' => 'This is test item',
    'page callback' => 'my_menu_test_item_page',
    'file' => 'my_menu.pages.inc',
    'menu_name' => 'menu-test',
    'access callback' => TRUE,
    'expanded' => TRUE,
  ];

  $items['tab_item'] = array(
    'title' => 'Страница с табами',
    'page callback' => 'my_menu_tab_item_page',
    'access callback' => TRUE,
    'menu_name' => 'menu-test',
    'file' => 'my_menu.pages.inc',
    'expanded' => TRUE,
  );
  $items['tab_item/first_tab'] = array(
    'title' => 'Первый таб',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'access callback' => TRUE,
    'weight' => -10,
    'file' => 'my_menu.pages.inc',
  );
  $items['tab_item/second_tab'] = array(
    'title' => 'Второй таб',
    'type' => MENU_LOCAL_TASK,
    'page callback' => 'my_menu_tab_item_second_page',
    'file' => 'my_menu.pages.inc',
    'access callback' => TRUE,
  );

  $items['node/27'] = array(
    'title callback' => 'node_page_title_from_nid',
    'title arguments' => array(1),
    'page callback' => 'my_menu_node_item',
    'page arguments' => array(1),
    'access callback' => TRUE,
    'file' => 'my_menu.pages.inc',
    'menu_name' => 'menu-test',
  );

  $items['items_collection'] = array(
    'title' => 'items collection',
    'page callback' => 'my_menu_items_collection_page',
    'access callback' => TRUE,
    'file' => 'my_menu.pages.inc',
    'menu_name' => 'menu-test'
  );

  return $items;
}

/**
 * Implements hook_permission().
 *
 * Provides a demonstration access string.
 */
function my_menu_permission() {
  return array(
    'access to ads' => array(
      'title' => t('Access to adding ads'),
      'description' => t('Perform administration tasks for my module.'),
    ),
    'access to reviews' => array(
      'title' => t('Access to adding reviews'),
      'description' => t('Perform administration tasks for my module.'),
    ),
  );
}

/**
 * @param $items
 */

function my_menu_menu_alter(&$items) {
  if (!empty($items['test_item'])) {
    $items['test_item_new'] = $items['test_item'];
    $items['test_item_new']['title'] = 'Altered item';
    unset($items['test_item']);
  }
  if (!empty($items['test_item_new'])) {
    $items['test_item_new']['page callback'] = 'my_menu_test_altered_page';
  }

}

/**
 * @return string
 */
function my_menu_items_collector() {
  $names = module_implements('menu');
  $res = '';
  foreach ($names as $value) {
    $res = $res . t("<b>") . $value . t("</b><br/>");
    $items = module_invoke($value, 'menu');
    foreach ($items as $key => $val) {
      if (!empty($items[$key]['title'])) {
        $item_name = $items[$key]['title'];
      }
      else {
        $item_name = $key;
      }
      $item_link = $key;
      $res = $res . l($item_name, $item_link)  . t('<br/>');
    }
    $res = $res . t('<br/>');
  }
  return $res;
}